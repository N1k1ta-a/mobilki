import 'dart:math';

import 'package:flutter/material.dart';

void main(List<String> args) {
  runApp(const App());
}

class App extends StatelessWidget {
  const App({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      home: HomeScreen(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class HomeScreen extends StatelessWidget {
  const HomeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Ваша страница"),
        leading: IconButton(
          icon: Icon(
            Icons.arrow_back,
            color: Theme.of(context).colorScheme.primary,
          ),
          onPressed: () {},
        ),
      ),
      bottomNavigationBar: CustomBottomBar(),
      body: SingleChildScrollView(
        padding: EdgeInsets.symmetric(horizontal: 16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            ProfileSection(username: "иван", status: "aaaa"),
            SizedBox(height: 15),
            ProfileControlPannel(),
            SizedBox(height: 25),
            ProfoleInfoPanel(),
            SizedBox(height: 25,),
            
            CustomImageSlider(
  images: [
    "https://as2.ftcdn.net/v2/jpg/17/09/72/09/1000_F_1709720962_Jw6cpTLneV2vNndRfd8xXRAUsj0MmxzN.jpg",
    "https://as2.ftcdn.net/v2/jpg/16/53/87/43/1000_F_1653874355_11PtzqUU0EvmRu6GGHhsLjeXuqbdFBVL.jpg",
    "https://as2.ftcdn.net/v2/jpg/17/06/13/63/1000_F_1706136314_Bm1P8IpnPnd39vvtZfLXSKoIyF2WLp9L.jpg",
    "https://as2.ftcdn.net/v2/jpg/16/97/88/07/1000_F_1697880742_3SSkWRW6OnwujM5jw4ymFbwvo0mMkQOF.jpg",
    "https://as2.ftcdn.net/v2/jpg/16/74/00/49/1000_F_1674004935_56L2usiIdszzANays6D2hbAUTzuKNfVc.jpg",
    "https://as2.ftcdn.net/v2/jpg/17/13/20/67/1000_F_1713206789_IbiQvrXTjAmZjQDs6ycU7JEd9KrzYK7x.jpg",
  ],
),
SizedBox(height: 25),

FeedList(items: [FeedItem(username: 'scvcs', dateTime: '10;00', content: 'sjcnjs'),
FeedItem(username: 'scvcs', dateTime: '10;00', content: 'sjcnjs'),
FeedItem(username: 'scvcs', dateTime: '10;00', content: 'sjcnjs')])
          ],
        ),
      ),
    );
  }
}

class FeedList extends StatelessWidget {
  final List<FeedItem> items;
  const FeedList({required this.items, super.key});

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Header(text: "Новости"),
        ...items,
      ],
    );
  }
}
class FeedItem extends StatelessWidget {
  final String username;
  final String dateTime;
  final String content;
  const FeedItem({
    super.key,
    required this.username,
    required this.dateTime,
    required this.content,
    });

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Row(
          children: [
            CustomAvatar(radius: 25),
            SizedBox(width: 10),
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(username),
                Text(
                  dateTime,
                  style: TextStyle(fontSize: 12, color: Colors.grey),
                ),
              ],
            ),
          ],
        ),
        SizedBox(height: 8),
        Text(content),
        SizedBox(height: 15),
      ],
    );
  }
}

class CustomImageSlider extends StatelessWidget {
  final List<String> images;

  const CustomImageSlider({super.key, required this.images});

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Padding(
          padding: EdgeInsets.symmetric(horizontal: 16),
          child: Header(text: "Фотографии"),
        ),
        SingleChildScrollView(
          scrollDirection: Axis.horizontal,
          child: Row(
            children: [
              SizedBox(width: 20),
              ...images.map(
                (e) => Padding(
                  padding: EdgeInsetsGeometry.all(3),
                  child: Image.network(
                    e,
                    fit: BoxFit.cover,
                    width: 140,
                    height: 140,
                  ),
                   ),
              ),
              SizedBox(width: 20),
            ],
          ),
        ),
      ],
    );
  }
}

class ProfoleInfoPanel extends StatelessWidget {
  const ProfoleInfoPanel({super.key});

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Row(
          children: [
            Expanded(child: CustomCard(
              text: 'Друзья', 
              count: 204,
              icon: Icons.people,
              iconColor: Colors.blue,
              ),
              ),
              SizedBox(width: 10),
              Expanded(child: CustomCard(text: "Музыка", 
              count: 1_320, 
              icon: Icons.music_note, 
              iconColor: Colors.red,
              ),
              ),
          ],
        ),
        SizedBox(height: 10),
        Row(
          children: [
            Expanded(child: CustomCard(
              text: "Видео:", 
              count: 9, 
              icon: Icons.video_collection, 
              iconColor: Colors.purple,
              ),
              ),
              SizedBox(width: 10),
              Expanded(child: CustomCard(text: "Чат", 
              count: 45, 
              icon: Icons.chat, 
              iconColor: Colors.green)),
          ],
        ),
      ],
    );
  }
}

class CustomCard extends StatelessWidget {
  final String text;
  final int count;
  final IconData icon;
  final Color iconColor;

  const CustomCard({
    required this.text,
    required this.count,
    required this.icon,
    required this.iconColor,
    super.key,
    });

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: EdgeInsets.symmetric(horizontal: 12, vertical: 16),
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(20),
        color: Theme.of(context).colorScheme.secondaryContainer,
      ),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          Icon(icon, color: iconColor),
          SizedBox(width: 8),
          Expanded(child: Text("$text($count)",
          softWrap: false,
          overflow: TextOverflow.fade,
          style: TextStyle(
            color: Theme.of(context).colorScheme.onSecondaryContainer,
          ),
          )
          )
        ],
      ),
    );
  }
}

class ProfileControlPannel extends StatelessWidget {
  const ProfileControlPannel({super.key});

  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        Expanded(
          child: CustomButton(text: "редактировать", onPressed: () {}),
        ),
        SizedBox(width: 10),
        Expanded(
          child: CustomButton(
            text: "выход",
            backgraund: Theme.of(context).colorScheme.secondaryContainer,
            foregraund: Theme.of(context).colorScheme.onSecondaryContainer,
            onPressed: () {},
          ),
        ),
      ],
    );
  }
}

class CustomButton extends StatelessWidget {
  final String text;
  final VoidCallback onPressed;
  final Color? backgraund;
  final Color? foregraund;

  const CustomButton({
    super.key,
    required this.text,
    required this.onPressed,
    this.backgraund,
    this.foregraund,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
      decoration: BoxDecoration(
        color: backgraund ?? Theme.of(context).colorScheme.primary,
        borderRadius: BorderRadius.circular(20),
      ),
      alignment: Alignment.center,
      child: Text(
        text,
        style: TextStyle(
          color: foregraund ?? Theme.of(context).colorScheme.onPrimary,
        ),
      ),
    );
  }
}

class ProfileSection extends StatelessWidget {
  final String username;
  final String status;
  const ProfileSection({
    super.key,
    required this.username,
    required this.status,
  });

  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        CustomAvatar(radius: 60, showIcon: true),
        SizedBox(width: 20),
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                username,
                style: TextStyle(fontSize: 18, fontWeight: FontWeight.w600),
              ),
              Text(status, style: TextStyle(fontSize: 18, color: Colors.cyan)),
            ],
          ),
        ),
      ],
    );
  }
}
class CustomBottomBar extends StatelessWidget {
  const CustomBottomBar({super.key});

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Container(
        padding: EdgeInsets.symmetric(horizontal: 12, vertical: 16),
        decoration: BoxDecoration(
          color: Theme.of(context).colorScheme.surface,
          boxShadow: [
            BoxShadow(
              color: Theme.of(context).colorScheme.shadow.withAlpha(20),
              offset: const Offset(0, -4),
              blurRadius: 8,
              spreadRadius: -4,
            ),
          ],
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,

          children: [Icons.search, Icons.home, Icons.settings, Icons.logout]
              .map(
                (e) => IconButton(
                  padding: EdgeInsets.symmetric(horizontal: 20),
                  onPressed: () {},
                  icon: Icon(e, color: Theme.of(context).colorScheme.primary),
                ),
              )
              .toList(),
        ),
      ),
    );
  }
}

class CustomAvatar extends StatelessWidget {
  final double radius;
  final bool showIcon;
  const CustomAvatar({required this.radius, this.showIcon = false, super.key});

  @override
  Widget build(BuildContext context) {
    return SizedBox.square(
      dimension: radius * 2,
      child: Stack(
        children: [
          Container(
            decoration: BoxDecoration(
              border: BoxBorder.all(width: 2.5, color: Colors.white),
              shape: BoxShape.circle,
              image: DecorationImage(
                image: NetworkImage(
                  "https://avatars.mds.yandex.net/i?id=b6472c8f8b1a6c67c11585a737d779a9_l-5225975-images-thumbs&n=13",
                ),
                fit: BoxFit.fill,
              ),
            ),
          ),
          if (showIcon)
            Positioned(
              right: 8,
              bottom: 8,
              child: Container(
                width: 25,
                height: 25,
                alignment: Alignment.center,
                decoration: BoxDecoration(
                  color: Theme.of(context).colorScheme.primary,
                  shape: BoxShape.circle,
                  border: BoxBorder.all(color: Colors.white),
                ),
                child: Icon(Icons.edit, size: 16, color: Colors.white),
              ),
            ),
        ],
      ),
    );
  }
}
class Header extends StatelessWidget {
  final String text;
  const Header({super.key, required this.text});

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Text(text, style: TextStyle(fontSize: 20, fontWeight: FontWeight.w500)),
        SizedBox(height: 50),
      ],
    );
  }
}
